import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '1.3.1'
    id 'org.jetbrains.kotlin.jvm' version '1.5.31'
    id 'jacoco'
    id("org.cqfn.diktat.diktat-gradle-plugin") version "0.6.2"
}

group 'by.overpass'
version '1.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

ext {
    junitVersion = "4.13.2"
    antlr4Version = "4.9.3"
    antlr4IntellijAdaptor = "0.1"
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

dependencies {
    implementation project(":twap-parser")
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "org.antlr:antlr4-intellij-adaptor:$antlr4IntellijAdaptor"
    testImplementation "junit:junit:$junitVersion"
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version.set("203.7717.56")
    plugins.set(['com.intellij.java', 'android'])
}

runIde {

    if (Os.isFamily(Os.FAMILY_MAC)) {
//        // to run with the real Android Studio
//        ideDirectory = '/Applications/Android Studio.app/Contents'
    }
}

patchPluginXml {
    changeNotes.set("""
      Initial implementation""")
}

signPlugin {
    certificateChain = System.getenv("TWINE_PLUGIN_CERTIFICATE_CHAIN")
    privateKey = System.getenv("TWINE_PLUGIN_PRIVATE_KEY")
    password = System.getenv("TWINE_PLUGIN_PRIVATE_KEY_PASSWORD")
}

publishPlugin {
    token = System.getenv("TWINE_PLUGIN_PUSH_TOKEN")
}

test {
    useJUnit()
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {

    dependsOn test

    reports {
        xml.enabled true
        html.enabled true
    }
}